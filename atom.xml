<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>yurifranxx&#39;s Blog</title>
  
  <subtitle>一只大二小萌新</subtitle>
  <link href="https://franxxyuri.github.io/atom.xml" rel="self"/>
  
  <link href="https://franxxyuri.github.io/"/>
  <updated>2024-07-30T14:04:16.144Z</updated>
  <id>https://franxxyuri.github.io/</id>
  
  <author>
    <name>yurifranxx</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>gal异闻录（三）</title>
    <link href="https://franxxyuri.github.io/2024/07/20/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89/"/>
    <id>https://franxxyuri.github.io/2024/07/20/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89/</id>
    <published>2024-07-20T13:22:04.000Z</published>
    <updated>2024-07-30T14:04:16.144Z</updated>
    
    <content type="html"><![CDATA[<h1 id="心灵琉塔"><a href="#心灵琉塔" class="headerlink" title="心灵琉塔"></a>心灵琉塔</h1><blockquote><p> 栗pick的新作，</p></blockquote><ul><li><img src="/2024/07/20/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89/01.png"></li></ul><h2 id="剧情介绍"><a href="#剧情介绍" class="headerlink" title="剧情介绍"></a>剧情介绍</h2><p>因为要考研，后续慢慢填坑。</p><p>To be continue;</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;心灵琉塔&quot;&gt;&lt;a href=&quot;#心灵琉塔&quot; class=&quot;headerlink&quot; title=&quot;心灵琉塔&quot;&gt;&lt;/a&gt;心灵琉塔&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 栗pick的新作，&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;img src=&quot;/</summary>
      
    
    
    
    <category term="gal" scheme="https://franxxyuri.github.io/categories/gal/"/>
    
    
    <category term="gal杂谈" scheme="https://franxxyuri.github.io/tags/gal%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>一些简单的环境搭建</title>
    <link href="https://franxxyuri.github.io/2022/05/28/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B0%8F%E6%9B%B4%E6%96%B0/"/>
    <id>https://franxxyuri.github.io/2022/05/28/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B0%8F%E6%9B%B4%E6%96%B0/</id>
    <published>2022-05-28T08:00:00.000Z</published>
    <updated>2022-09-06T00:42:01.111Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一点点小更新"><a href="#一点点小更新" class="headerlink" title="一点点小更新"></a>一点点小更新</h1><h2 id="深度学习的环境搭建"><a href="#深度学习的环境搭建" class="headerlink" title="深度学习的环境搭建"></a>深度学习的环境搭建</h2><p>今天的时候学了anacoda的环境搭建，本来的时候一直报错</p><p><img src="/2022/05/28/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B0%8F%E6%9B%B4%E6%96%B0/Snipaste_2022-05-28_10-08-04.png"></p><p>Google后发现是因为我的vscode设置成默认管理员模式打开导致每次打开anaconda都会自动打开vscode的cli.js。</p><p>后面想到之前一直很头疼的深度学习环境搭建，在没用docker之前环境的搭建一直让我很头疼。</p><p>话不多说我们来配置一下tensorflow+pytorch环境</p><p><a href="https://www.tensorflow.org/install/source_windows?hl=zh_cn#gpu%E4%B8%8A%E6%9F%A5%E6%89%BEcuda%E5%92%8Ccudnn%E7%89%88%E6%9C%AC">https://www.tensorflow.org/install/source_windows?hl=zh_cn#gpu上查找cuda和cudnn版本</a></p><p>在conda上输入</p><p><img src="/2022/05/28/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B0%8F%E6%9B%B4%E6%96%B0/Snipaste_2022-05-28_17-05-23.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">conda create -n dqn python=3.7</span><br><span class="line">conda activate dqn</span><br><span class="line">conda install -c conda-forge cudatoolkit=(cuda版本)</span><br><span class="line">conda install -c conda-forge cudnn=(cudnn版本)</span><br><span class="line">conda clean -a</span><br><span class="line">pip install tensorflow</span><br></pre></td></tr></table></figure><p><img src="/2022/05/28/%E4%B8%80%E7%82%B9%E7%82%B9%E5%B0%8F%E6%9B%B4%E6%96%B0/image-20220528170358723.png"></p><hr><h2 id="docker学习的一些感受"><a href="#docker学习的一些感受" class="headerlink" title="docker学习的一些感受"></a>docker学习的一些感受</h2><p>docker是这些年比较火的一个词，docker能够帮助我们方便的搭建镜像。我们通常会去测试各种项目，不同的机子上可能会比较难复现，使用docker可以帮我们解决这个问题。在windows下作用可能相对来说没有那么大（平时主要是整php（php是世界上最好的语言））。测试环境都要创建虚拟机未免太麻烦了。相对于应用程序，操作系统对于内存的占用过大，container技术只隔离应用程序的运行时环境但容器之间可以共享同一个操作系统。相对来说内存占用比较小，把环境打包进docker，就能解决不同操作系统环境的问题，同时可以快速部署。进行docker builde 后run docker image。tensorflow在linux下有docker映像<a href="https://hub.docker.com/r/tensorflow/tensorflow/tags%E5%9F%BA%E4%BA%8E%E6%AD%A4%E6%98%A0%E5%83%8F%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%AE%9E%E7%8E%B0%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2">https://hub.docker.com/r/tensorflow/tensorflow/tags基于此映像我们可以实现快速部署</a></p><h2 id="最近因为快照出现错误回滚失败最后只能选择重新搭建linux环境"><a href="#最近因为快照出现错误回滚失败最后只能选择重新搭建linux环境" class="headerlink" title="最近因为快照出现错误回滚失败最后只能选择重新搭建linux环境"></a>最近因为快照出现错误回滚失败最后只能选择重新搭建linux环境</h2><p>整理了一下LNMP环境搭建的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c http://mirrors.linuxeye.com/oneinstack-full.tar.gz &amp;&amp; tar xzf oneinstack-full.tar.gz &amp;&amp; ./oneinstack/install.sh --nginx_option 1 --php_option 9 --phpcache_option 1 --php_extensions zendguardloader,ioncube,sourceguardian,imagick,fileinfo,imap,ldap,phalcon,yaf,redis,memcached,memcache,mongodb,swoole,xdebug --phpmyadmin  --db_option 2 --dbinstallmethod 1 --dbrootpwd oneinstack --pureftpd  --redis  --memcached  --reboot </span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一点点小更新&quot;&gt;&lt;a href=&quot;#一点点小更新&quot; class=&quot;headerlink&quot; title=&quot;一点点小更新&quot;&gt;&lt;/a&gt;一点点小更新&lt;/h1&gt;&lt;h2 id=&quot;深度学习的环境搭建&quot;&gt;&lt;a href=&quot;#深度学习的环境搭建&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="搭建环境" scheme="https://franxxyuri.github.io/categories/%E6%90%AD%E5%BB%BA%E7%8E%AF%E5%A2%83/"/>
    
    
    <category term="docker" scheme="https://franxxyuri.github.io/tags/docker/"/>
    
    <category term="机器学习" scheme="https://franxxyuri.github.io/tags/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>mirai机器人学习笔记（一）</title>
    <link href="https://franxxyuri.github.io/2022/05/11/mirai%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://franxxyuri.github.io/2022/05/11/mirai%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2022-05-11T10:00:00.000Z</published>
    <updated>2022-09-06T00:42:01.109Z</updated>
    
    <content type="html"><![CDATA[<p>#mirai机器人学习笔记（一）</p><ul><li><p>mirai是一个开源项目（此处插入网址mirai 是一个在全平台下运行，提供 QQ Android 协议支持的<a href="https://github.com/mamoe/mirai">高效率机器人库</a></p></li><li><p>首先我我们需要jdk版本&gt;&#x3D;8，题主这里使用的是java8，<a href="https://www.oracle.com/java/technologies/java-se-glance.html">下载地址</a><br>下一步我们需要下载<a href="https://github.com/iTXTech/mcl-installer">mirai安装器</a>（其实可以下载其他的，但是使用安装器可一键安装依赖环境）<img src="/2022/05/11/mirai%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/02.jpg"></p></li><li><p>powershell启动mirai安装器后会提示选择安装路径<img src="/2022/05/11/mirai%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/04.png"></p></li><li><p>我们在&#x2F;config&#x2F;console&#x2F;autologin中配置账号密码信息，然后双击打开mcl.cmd，此时可能会遇到登录验证，手机上下载<a href="https://github.com/mzdluo123/TxCaptchaHelper">滑块验证</a>进行滑块验证，成功后我们就可以在mirai上登录qq了。在安装配置完<a href="https://github.com/project-mirai/chat-command">chat-command</a>和<a href="https://github.com/project-mirai/mirai-api-http">mirai-chat-http</a>两个官方插件后就可以实现调用机器人的基础命令了。</p></li><li><p>mirai上预留了很多接口。比较重要的是消息元素最基本的接口Message.基础框架如下</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Linq;</span><br><span class="line">using Mirai.CSharp;</span><br><span class="line">using Mirai.CSharp.Models;</span><br><span class="line">namespace TestProj</span><br><span class="line">&#123;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Program</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        static void Main(string[] args)</span><br><span class="line">        &#123;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里贴上自己实现的调用mirai接口代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests ,json</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">def <span class="title function_">send</span><span class="params">(</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">    text = <span class="string">&#x27;&#x27;</span>,</span></span><br><span class="line"><span class="params"></span></span><br><span class="line"><span class="params">    http_url = <span class="string">&quot;http://localhost:8080&quot;</span>,</span></span><br><span class="line"><span class="params">    # 认证密钥(str)</span>，此处应该与自己配置时的密钥一样</span><br><span class="line">    verifykey = <span class="number">12345678</span>,</span><br><span class="line"></span><br><span class="line">    sender = 此处改成机器人的qq号,</span><br><span class="line">    # 接收信息的QQ(<span class="type">int</span>)</span><br><span class="line">    addressee =此处改成接收信息的qq</span><br><span class="line">):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        Connection = json.loads(</span><br><span class="line">            requests.post(</span><br><span class="line">                url = http_url + <span class="string">&quot;/verify&quot;</span>,</span><br><span class="line">                json=&#123;</span><br><span class="line">                    <span class="string">&quot;verifyKey&quot;</span>: verifykey,</span><br><span class="line">                &#125;</span><br><span class="line">            ).text</span><br><span class="line">        )</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_">int</span><span class="params">(Connection[<span class="string">&quot;code&quot;</span>])</span> == <span class="number">1</span> :</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">2</span>,<span class="string">&quot;密码错误&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_">int</span><span class="params">(</span></span><br><span class="line"><span class="params">            json.loads(</span></span><br><span class="line"><span class="params">                requests.post(</span></span><br><span class="line"><span class="params">                    url = http_url + <span class="string">&quot;/bind&quot;</span>,</span></span><br><span class="line"><span class="params">                    json = &#123;</span></span><br><span class="line"><span class="params">                        <span class="string">&quot;sessionKey&quot;</span>:Connection[<span class="string">&quot;session&quot;</span>],</span></span><br><span class="line"><span class="params">                        <span class="string">&quot;qq&quot;</span>: sender</span></span><br><span class="line"><span class="params">                    &#125;</span></span><br><span class="line"><span class="params">                )</span>.text</span><br><span class="line">            )[<span class="string">&quot;code&quot;</span>]</span><br><span class="line">        ) == <span class="string">&quot;2&quot;</span>:</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">1</span>,<span class="string">&quot;没有找到指定的&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_">int</span><span class="params">(</span></span><br><span class="line"><span class="params">            json.loads(</span></span><br><span class="line"><span class="params">                requests.post(</span></span><br><span class="line"><span class="params">                    url = http_url + <span class="string">&quot;/sendFriendMessage&quot;</span>,</span></span><br><span class="line"><span class="params">                    json = &#123;</span></span><br><span class="line"><span class="params">                        <span class="string">&quot;target&quot;</span>: addressee,</span></span><br><span class="line"><span class="params">                        <span class="string">&quot;sessionKey&quot;</span>: Connection[<span class="string">&quot;session&quot;</span>],</span></span><br><span class="line"><span class="params">                        <span class="string">&quot;messageChain&quot;</span>:[</span></span><br><span class="line"><span class="params">                            &#123;</span></span><br><span class="line"><span class="params">                                <span class="string">&quot;type&quot;</span>:<span class="string">&quot;Plain&quot;</span>,</span></span><br><span class="line"><span class="params">                                <span class="string">&quot;text&quot;</span>:str(text)</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        ]</span><br><span class="line">                    &#125;</span><br><span class="line">                ).text</span><br><span class="line">            )[<span class="string">&quot;code&quot;</span>]</span><br><span class="line">        ) == <span class="number">0</span> :</span><br><span class="line">            <span class="keyword">return</span> [<span class="number">0</span>,<span class="string">&quot;正常&quot;</span>]</span><br><span class="line">    except:</span><br><span class="line">        <span class="keyword">return</span> [<span class="number">3</span>,<span class="string">&quot;连接失败&quot;</span>]</span><br><span class="line"></span><br><span class="line">def <span class="title function_">help</span><span class="params">()</span>:</span><br><span class="line">    help_list = [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">            <span class="string">&quot;format&quot;</span>: <span class="string">&quot;str&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mark&quot;</span>: <span class="string">&quot;发送文本&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: <span class="string">&quot;http_url&quot;</span>,</span><br><span class="line">            <span class="string">&quot;format&quot;</span>: <span class="string">&quot;str&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mark&quot;</span>: <span class="string">&quot;服务地址&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: <span class="string">&quot;verifykey&quot;</span>,</span><br><span class="line">            <span class="string">&quot;format&quot;</span>: <span class="string">&quot;str&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mark&quot;</span>: <span class="string">&quot;验证密钥&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: <span class="string">&quot;sender&quot;</span>,</span><br><span class="line">            <span class="string">&quot;format&quot;</span>: <span class="string">&quot;int&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mark&quot;</span>: <span class="string">&quot;发送ID&quot;</span></span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="string">&quot;key&quot;</span>: <span class="string">&quot;addressee&quot;</span>,</span><br><span class="line">            <span class="string">&quot;format&quot;</span>: <span class="string">&quot;int&quot;</span>,</span><br><span class="line">            <span class="string">&quot;mark&quot;</span>: <span class="string">&quot;接收ID&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span>*<span class="number">100</span>)</span><br><span class="line">    print(<span class="string">&quot;帮助文档：&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;格式:[参数(类型)]注释||&lt;注释(类型)&gt;&quot;</span>)</span><br><span class="line">    print(<span class="string">&quot;-&quot;</span>*<span class="number">100</span>)</span><br><span class="line">    print(<span class="string">&quot;使用函数send()&quot;</span>)</span><br><span class="line">    <span class="keyword">for</span> single in help_list:</span><br><span class="line">        print(<span class="string">&quot;\t[&quot;</span> + single[<span class="string">&quot;key&quot;</span>] + <span class="string">&quot;(&quot;</span> + single[<span class="string">&quot;format&quot;</span>] + <span class="string">&quot;)]&quot;</span> + single[<span class="string">&quot;mark&quot;</span>])</span><br><span class="line">    print(<span class="string">&quot;=&quot;</span>*<span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="type">if</span> <span class="variable">__name__</span> <span class="operator">=</span>= <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">            x=input(<span class="string">&#x27;hello,world&#x27;</span>)</span><br><span class="line">            send(x)</span><br></pre></td></tr></table></figure></li><li><p>我们向8080端口发送post请求,并对返回的json进行处理。mirai中提供并且实现了对应的接口。<a href="https://github.com/mamoe/mirai/blob/dev/docs/CoreAPI.md">帮助文档</a></p></li><li><p>我们同时可以在官方论坛进行选择下载jdk插件安装到&#x2F;plugins目录下并在&#x2F;config文件夹下找到对应的setting.yml文件进行配置。打开mcl.cmd就可以进行使用。</p></li><li><p>题主代码水平比较菜，目前的话实现了lua，python的小程序，这里的话放上一个感觉挺好玩的项目<img src="/2022/05/11/mirai%E6%9C%BA%E5%99%A8%E4%BA%BA%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/03.png">,该项目可以实现调用接口机器学习<a href="https://github.com/babysor/MockingBird">克隆人声</a>。</p></li><li><p>附上<a href="https://mirai.mamoe.net/">mirai论坛官网</a></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;#mirai机器人学习笔记（一）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;mirai是一个开源项目（此处插入网址mirai 是一个在全平台下运行，提供 QQ Android 协议支持的&lt;a href=&quot;https://github.com/mamoe/mirai&quot;&gt;高效率机器人库&lt;</summary>
      
    
    
    
    <category term="kotlin" scheme="https://franxxyuri.github.io/categories/kotlin/"/>
    
    
    <category term="kotlin" scheme="https://franxxyuri.github.io/tags/kotlin/"/>
    
    <category term="qq群机器人" scheme="https://franxxyuri.github.io/tags/qq%E7%BE%A4%E6%9C%BA%E5%99%A8%E4%BA%BA/"/>
    
  </entry>
  
  <entry>
    <title>gal异闻录（二）</title>
    <link href="https://franxxyuri.github.io/2022/04/25/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>https://franxxyuri.github.io/2022/04/25/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89/</id>
    <published>2022-04-25T13:22:04.000Z</published>
    <updated>2022-09-06T00:42:01.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="恋狱月狂病"><a href="#恋狱月狂病" class="headerlink" title="恋狱月狂病"></a>恋狱月狂病</h1><blockquote><p> 《恋狱月狂病》由IG社于2005年发布，并在2007年补充特典《和之匣》。恋狱的故事以战争结束后六年的日本上野为舞台，讲述了曾经为警察的高城秋五侦探受以前的上司上岛有司邀请，调查上月家长女上月由良的失踪事件从而展开的一系列惨剧。</p></blockquote><h2 id="恒河天街夜如血，孤魂寒空照明月。"><a href="#恒河天街夜如血，孤魂寒空照明月。" class="headerlink" title="恒河天街夜如血，孤魂寒空照明月。"></a>恒河天街夜如血，孤魂寒空照明月。</h2><ul><li>游戏的雪景配上昭和年代感，营造了很符合意境的氛围，游戏剧本狂气十足，初看使人感觉浮夸惊悚，细细品味则觉得代入感很强，张力十足，而且部分游戏CG真的很美。</li><li>就和游戏名一样剧情里的各角色，为爱而狂。由良作为长女出生却带上了灰色的眼瞳，被排挤，被诅咒，妹妹和菜长相与她别无二致却因为没有这双灰瞳而饱受关爱。双眼被缠上绷带的她在一次走散中被秋五误认为是盲人而得到了秋五的照顾。她在与秋五的相处过程中首次感受到了真心的关爱而不是偏见和同情，从此她全身心系在秋五身上，这一点其实也和她童年的缺爱的经历有关（做一期儿童精神分析杂谈迫在眉睫了），对秋五的爱成为了由良生活的全部，但她并没有告诉秋五她不是盲人的事实，可能是害怕秋五知晓真相后不再爱护她。然而好景不长，因大陆战争（其实就是侵华战争）爆发，秋五必须去当兵。分别前由良苦苦哀求秋五不要走，但秋五没有答应。情绪失控的由良甚至要跟秋五殉情，但未能成功，从此，偏执的种子便在这两人之间种下。</li></ul><h2 id="剧情介绍"><a href="#剧情介绍" class="headerlink" title="剧情介绍"></a>剧情介绍</h2><p>曾经是警察的高城秋五侦探被以前的上司有岛先生邀请，帮助上月家寻找及调查长女上月由良的失踪案件，顺便泡妞。<br>上月由良原是高城秋五前女友，五年前因战乱分别就未再见。在与由良的妹妹上月和菜一起调查上月失踪案件时，悲剧也正在发生。（取自百度）</p><p>开头简洁明了的雪景封面加上悲怆的bgm让我每一次打开这个游戏都可以更快的带入到游戏氛围之中，良好的游戏界面，开头的雪地埋尸也是很让人有探索的欲望，剧情肯定加了少部分日常，日常灌水程度还行，但除了日常之外的剧情推动都很快捷利落，且曲线平滑上升，越到后面剧情节奏越快（以te为顶点）。</p><p>最后的纠葛是在是真实的可怕，上月庆一郎为了家族的荣誉抛弃了守护旧秩序的人在商场拼死一搏，终于成功后遭到周围人的非议，为了脱离非议又出卖了自己的女儿，可是他一开始抛弃了那么多不就是为了让自己免于落俗为周围人那样子么？为什么脱离了这些俗人还要屈膝于俗人！！！！啊！</p><p>但他在害怕的是什么，那是比自己在商场挣扎时更加恐怖的东西，人对于自以为与自己一样庸俗之人升官发财的毫无来由的憎恶，便编出运气，诅咒等等龌龊的词语，但你自己清楚，我们不会是上月庆一郎，我们不是《更容易》而是《就是》成为这些看人眼红的人渣，上月的悲剧我们每个人手上都有一份血，为什么我们可以逃脱罪责，甚至没有罪责？就是因为我们不是永远的人渣，我们是偶尔的人渣，偶尔的圣人，大多时候的普通人，这TM是人类的极恶，是人间地狱的永恒极乐之一,TMD狗屎。</p><p>上月由良莫名的遭此不幸，被监禁数年，拿去做人体实验，被家人抛弃，男主作为她黑暗人生中最后的一只萤火虫，微弱的光芒吸引的她发疯，而这道光甚至被小布尔乔亚上月和菜她莫名其妙的夺走，她展开一切非人性的恶，这意味着什么？人性的恶可以靠偶尔的人渣，偶尔的圣人，大多时候的普通人来脱罪，而非人性的恶乃是万劫不复的深渊！所以她无法被救赎，上月和菜的救赎只能解救那些享受人间地狱极乐之人，却无法解救犯下天堂之恶的上月由良，在最后真相的斩首台前，那说要救赎她的话语便是本作的真正高潮。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;恋狱月狂病&quot;&gt;&lt;a href=&quot;#恋狱月狂病&quot; class=&quot;headerlink&quot; title=&quot;恋狱月狂病&quot;&gt;&lt;/a&gt;恋狱月狂病&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt; 《恋狱月狂病》由IG社于2005年发布，并在2007年补充特典《和之匣》。恋狱的故事以战</summary>
      
    
    
    
    <category term="gal" scheme="https://franxxyuri.github.io/categories/gal/"/>
    
    
    <category term="gal杂谈" scheme="https://franxxyuri.github.io/tags/gal%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
  <entry>
    <title>gal异闻录（一）</title>
    <link href="https://franxxyuri.github.io/2021/06/07/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>https://franxxyuri.github.io/2021/06/07/gal%E5%BC%82%E9%97%BB%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89/</id>
    <published>2021-06-06T16:00:00.000Z</published>
    <updated>2022-09-06T00:42:01.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="交响乐之雨"><a href="#交响乐之雨" class="headerlink" title="交响乐之雨"></a>交响乐之雨</h1><p><em>法珞希黛(Falsità)，意为“谎言”、“伪善者”。一直以来挺喜欢冈崎律子老师的歌的，因为水果篮子这首歌玩了雨城之恋。</em></p><ul><li>在推完这部有些注水的gal后一年多的日子里，总是会自主不自主的梦到法洛。故记之。</li><li>我这辈子唯一一次在H场景的时候泪流满面，一段全年龄游戏里微不足道的H片段。男主在流泪，我也在流泪，因为太过于喜欢这角色，所以我完全感同身受。当你那么用心的去爱一个女孩子，你是那样相信对方，甚至恍惚间搞不清虚拟和现实的区别，却发现一切都是谎言，你只是被利用的工具。没有什么偶遇，没有什么巧合，一切都是必然，一切都是算计。甚至，只要可以，只要有需要，她对谁都可以褪下衣衫。那么，在来到我身边之前，在成为学生会长之前，在来到这所全国闻名的学院之前，在离开孤儿院之前，为了你的目的，你到底说过多少谎，骗过多少人，对多少人赤身裸体过？</li><li>破防了，真的破防了。屏幕里的法珞赤身裸体，我感觉到有什么东西在我面前瞬间崩塌。我就像个傻逼一样在电脑前呜咽，双拳紧握，垂着头颤抖。最后的音乐会大获成功，根据前面选项不同后面有两个END。一个是选择即使如此我还要陪在她身边，法珞放肆的大笑，仿佛在嘲弄我永远被她玩弄于股掌之中；一个是果断地离开，留下法珞在原地仿佛悲伤又仿佛冷漠的注视我离去……</li><li>当时我问了自己好久，如果是自己，我会如何选择？那时我经历的很少，法珞的嘲笑在我耳边萦绕不绝，我无法原谅这种欺骗，不甘接受自己只是个被摆弄的棋子，虽然不舍也要果断离开。</li><li>“你怎么可以这样利用我！”——刚开始我也和男主角一样，有点愤怒。但冷静下来想想，严格来说这也不是利用，只不过是她主动靠近，而我没有拒绝，接受了她的歌声。反过来说，这样一个有三情六欲的人才更显得有血有肉，像黎瑟那样心思单纯的女孩子终究更像一个童话。然后我的心情也和男主角一样：回去找她吧。最终，我选择与雅俐断交，和法珞一起坐火车离开了琵伯欧。列车穿出隧道，雨停了。望着她捏着胸前那个吊坠的幸福的样子，我不禁觉得，自己或许真的是爱上身边这个女孩子了。</li><li>法珞是一个双面人，平常的她待人和善，得体大方，是学院里人人喜爱的会长。作者一直都在描绘她这一面，在前面将近五分之四长度的剧情中都给玩家呈现出一名几乎无可挑剔的优秀女性。直到毕业典礼当天，作者才猛然发力展现出她稍显阴暗的另一面。她有自己的算盘，她为了达到目的不惜利用自己喜欢的人，她甚至有点势利。但她有梦想、有追求，她不甘于一辈子生活在孤儿院和养父的阴影之下。<br>最后以法珞的曲子作为结尾（小水一篇）<blockquote><ul><li>ひとつの夢（ゆめ）のため</li><li>为了一个梦想</li><li>あきらめなきゃならないこと</li><li>不得不去放弃一些事物</li><li>たとえば　今（いま）　それが</li><li>倘若 现在 那个</li><li>恋（こい）だとしたら</li><li>是爱情的话</li><li>…迷（まゆ）う</li><li>…迷失了</li><li>居場所（いばしょ）はどこだろう</li><li>（我的）归属在哪里呢</li><li>私（わたし）の役割（やくわり）はなに？</li><li>我的使命又是什么？</li><li>ずっとずっと思（おも）ってた</li><li>一直一直在不停地思考</li><li>そして　みつけた気（き）がしたの</li><li>最后 觉得似乎找到了答案</li><li>ここでならば言（い）える</li><li>如果就在这里开口的话</li><li>今（いま）まで言（い）えなかったことや</li><li>迄今没有能够说出口的一切</li><li>胸（むね）の内（うち）さえも</li><li>埋藏于心底的也好</li><li>口（くち）をついて出（で）るメロディー</li><li>都成为了脱口而出的旋律</li><li>やがて　覚悟（かくご）が芽生（めば）えていた</li><li>结果 终于有所领悟</li><li>この夢（ゆめ）のためならば</li><li>若是为了这一个梦想</li><li>他（ほか）を全（すべ）ててかまわない</li><li>将其他全部舍弃也没有关系</li></ul></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;交响乐之雨&quot;&gt;&lt;a href=&quot;#交响乐之雨&quot; class=&quot;headerlink&quot; title=&quot;交响乐之雨&quot;&gt;&lt;/a&gt;交响乐之雨&lt;/h1&gt;&lt;p&gt;&lt;em&gt;法珞希黛(Falsità)，意为“谎言”、“伪善者”。一直以来挺喜欢冈崎律子老师的歌的，因为水果篮子这首歌玩</summary>
      
    
    
    
    <category term="gal" scheme="https://franxxyuri.github.io/categories/gal/"/>
    
    
    <category term="gal杂谈" scheme="https://franxxyuri.github.io/tags/gal%E6%9D%82%E8%B0%88/"/>
    
  </entry>
  
</feed>
